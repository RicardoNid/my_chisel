;buildInfoPackage: chisel3, version: 3.3.1, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit Fir : 
  module Fir : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : UInt<8>, flip valid : UInt<1>, out : UInt<8>, flip consts : UInt<8>[10]}
    
    reg taps_1 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_2 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_3 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_4 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_5 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_6 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_7 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_8 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    reg taps_9 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[FIR.scala 14:66]
    when io.valid : @[FIR.scala 15:64]
      taps_1 <= io.in @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_2 <= taps_1 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_3 <= taps_2 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_4 <= taps_3 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_5 <= taps_4 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_6 <= taps_5 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_7 <= taps_6 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_8 <= taps_7 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    when io.valid : @[FIR.scala 15:64]
      taps_9 <= taps_8 @[FIR.scala 15:68]
      skip @[FIR.scala 15:64]
    node _T = mul(io.in, io.consts[0]) @[FIR.scala 17:56]
    node _T_1 = mul(taps_1, io.consts[1]) @[FIR.scala 17:56]
    node _T_2 = mul(taps_2, io.consts[2]) @[FIR.scala 17:56]
    node _T_3 = mul(taps_3, io.consts[3]) @[FIR.scala 17:56]
    node _T_4 = mul(taps_4, io.consts[4]) @[FIR.scala 17:56]
    node _T_5 = mul(taps_5, io.consts[5]) @[FIR.scala 17:56]
    node _T_6 = mul(taps_6, io.consts[6]) @[FIR.scala 17:56]
    node _T_7 = mul(taps_7, io.consts[7]) @[FIR.scala 17:56]
    node _T_8 = mul(taps_8, io.consts[8]) @[FIR.scala 17:56]
    node _T_9 = mul(taps_9, io.consts[9]) @[FIR.scala 17:56]
    node _T_10 = add(_T, _T_1) @[FIR.scala 17:71]
    node _T_11 = tail(_T_10, 1) @[FIR.scala 17:71]
    node _T_12 = add(_T_11, _T_2) @[FIR.scala 17:71]
    node _T_13 = tail(_T_12, 1) @[FIR.scala 17:71]
    node _T_14 = add(_T_13, _T_3) @[FIR.scala 17:71]
    node _T_15 = tail(_T_14, 1) @[FIR.scala 17:71]
    node _T_16 = add(_T_15, _T_4) @[FIR.scala 17:71]
    node _T_17 = tail(_T_16, 1) @[FIR.scala 17:71]
    node _T_18 = add(_T_17, _T_5) @[FIR.scala 17:71]
    node _T_19 = tail(_T_18, 1) @[FIR.scala 17:71]
    node _T_20 = add(_T_19, _T_6) @[FIR.scala 17:71]
    node _T_21 = tail(_T_20, 1) @[FIR.scala 17:71]
    node _T_22 = add(_T_21, _T_7) @[FIR.scala 17:71]
    node _T_23 = tail(_T_22, 1) @[FIR.scala 17:71]
    node _T_24 = add(_T_23, _T_8) @[FIR.scala 17:71]
    node _T_25 = tail(_T_24, 1) @[FIR.scala 17:71]
    node _T_26 = add(_T_25, _T_9) @[FIR.scala 17:71]
    node _T_27 = tail(_T_26, 1) @[FIR.scala 17:71]
    io.out <= _T_27 @[FIR.scala 17:10]
    
