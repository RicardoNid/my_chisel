circuit CORDIC :
  module CORDIC :
    input clock : Clock
    input reset : UInt<1>
    input io_dataInX : SInt<20>
    input io_dataInY : SInt<20>
    input io_dataInPhase : SInt<20>
    output io_dataOutX : SInt<21>
    output io_dataOutY : SInt<21>
  
    reg regsX_0 : SInt<21>, clock with :
      reset => (UInt<1>("h0"), regsX_0) @[CORDIC.scala 59:18]
    reg regsX_1 : SInt<21>, clock with :
      reset => (UInt<1>("h0"), regsX_1) @[CORDIC.scala 59:18]
    reg regsY_0 : SInt<21>, clock with :
      reset => (UInt<1>("h0"), regsY_0) @[CORDIC.scala 60:18]
    reg regsY_1 : SInt<21>, clock with :
      reset => (UInt<1>("h0"), regsY_1) @[CORDIC.scala 60:18]
    reg regsPhase_0 : SInt<21>, clock with :
      reset => (UInt<1>("h0"), regsPhase_0) @[CORDIC.scala 61:22]
    reg regsPhase_1 : SInt<21>, clock with :
      reset => (UInt<1>("h0"), regsPhase_1) @[CORDIC.scala 61:22]
    node _T = gt(io_dataInPhase, asSInt(UInt<20>("h0"))) @[CORDIC.scala 68:43]
    node _T_1 = mux(_T, UInt<2>("h1"), UInt<2>("h2")) @[CORDIC.scala 68:23]
    node _T_2 = lt(io_dataInPhase, shl(asSInt(UInt<1>("h0")), 17)) @[CORDIC.scala 69:41]
    node _T_3 = sub(shl(asSInt(UInt<1>("h0")), 17), io_dataInPhase) @[CORDIC.scala 69:41]
    node _T_4 = tail(_T_3, 1) @[CORDIC.scala 69:41]
    node _T_5 = asSInt(_T_4) @[CORDIC.scala 69:41]
    node _T_6 = mux(_T_2, _T_5, io_dataInPhase) @[CORDIC.scala 69:41]
    node _T_7 = lt(_T_6, asSInt(UInt<20>("h3243f"))) @[CORDIC.scala 69:45]
    node plusOrMinus = _T_1 @[CORDIC.scala 68:17]
    node _T_8 = mux(_T_7, UInt<2>("h0"), plusOrMinus) @[CORDIC.scala 69:17]
    node phase = _T_8 @[CORDIC.scala 69:11]
    node _T_9 = eq(phase, UInt<2>("h0")) @[CORDIC.scala 80:14]
    node _T_10 = eq(phase, UInt<2>("h1")) @[CORDIC.scala 84:20]
    node _T_11 = sub(shl(asSInt(UInt<20>("h0")), 1), io_dataInY) @[CORDIC.scala 85:22]
    node _T_12 = tail(_T_11, 1) @[CORDIC.scala 85:22]
    node _T_13 = asSInt(_T_12) @[CORDIC.scala 85:22]
    node _T_14 = sub(io_dataInPhase, asSInt(UInt<20>("h3243f"))) @[CORDIC.scala 87:36]
    node _T_15 = tail(_T_14, 1) @[CORDIC.scala 87:36]
    node _T_16 = asSInt(_T_15) @[CORDIC.scala 87:36]
    node _T_17 = sub(shl(asSInt(UInt<20>("h0")), 1), io_dataInX) @[CORDIC.scala 90:22]
    node _T_18 = tail(_T_17, 1) @[CORDIC.scala 90:22]
    node _T_19 = asSInt(_T_18) @[CORDIC.scala 90:22]
    node _T_20 = add(io_dataInPhase, asSInt(UInt<20>("h3243f"))) @[CORDIC.scala 91:36]
    node _T_21 = tail(_T_20, 1) @[CORDIC.scala 91:36]
    node _T_22 = asSInt(_T_21) @[CORDIC.scala 91:36]
    node _GEN_0 = mux(_T_10, _T_13, io_dataInY) @[CORDIC.scala 84:32]
    node _GEN_1 = mux(_T_10, io_dataInX, _T_19) @[CORDIC.scala 84:32]
    node _GEN_2 = mux(_T_10, _T_16, _T_22) @[CORDIC.scala 84:32]
    node _GEN_3 = mux(_T_9, io_dataInX, _GEN_0) @[CORDIC.scala 80:24]
    node _GEN_4 = mux(_T_9, io_dataInY, _GEN_1) @[CORDIC.scala 80:24]
    node _GEN_5 = mux(_T_9, io_dataInPhase, _GEN_2) @[CORDIC.scala 80:24]
    node _T_25 = shr(regsX_0, 1) @[CORDIC.scala 101:32]
    node _T_26 = shl(_T_25, 1) @[CORDIC.scala 101:37]
    node _T_27 = shr(regsY_0, 1) @[CORDIC.scala 102:32]
    node _T_28 = shl(_T_27, 1) @[CORDIC.scala 102:37]
    node _T_30 = gt(regsPhase_0, shl(asSInt(UInt<20>("h0")), 1)) @[CORDIC.scala 111:44]
    node _T_24 = asSInt(bits(_T_28, 19, 0)) @[CORDIC.scala 99:24 CORDIC.scala 102:16]
    node _T_32 = sub(regsX_0, _T_24) @[CORDIC.scala 121:53]
    node _T_33 = tail(_T_32, 1) @[CORDIC.scala 121:53]
    node _T_34 = asSInt(_T_33) @[CORDIC.scala 121:53]
    node _T_35 = add(regsX_0, _T_24) @[CORDIC.scala 121:78]
    node _T_36 = tail(_T_35, 1) @[CORDIC.scala 121:78]
    node _T_37 = asSInt(_T_36) @[CORDIC.scala 121:78]
    node _T_29 = _T_30 @[CORDIC.scala 109:32 CORDIC.scala 111:24]
    node _T_31 = _T_29 @[CORDIC.scala 115:33 CORDIC.scala 117:25]
    node _T_38 = mux(_T_31, _T_34, _T_37) @[CORDIC.scala 121:20]
    node _T_23 = asSInt(bits(_T_26, 19, 0)) @[CORDIC.scala 98:24 CORDIC.scala 101:16]
    node _T_39 = add(regsY_0, _T_23) @[CORDIC.scala 122:52]
    node _T_40 = tail(_T_39, 1) @[CORDIC.scala 122:52]
    node _T_41 = asSInt(_T_40) @[CORDIC.scala 122:52]
    node _T_42 = sub(regsY_0, _T_23) @[CORDIC.scala 122:77]
    node _T_43 = tail(_T_42, 1) @[CORDIC.scala 122:77]
    node _T_44 = asSInt(_T_43) @[CORDIC.scala 122:77]
    node _T_45 = mux(_T_29, _T_41, _T_44) @[CORDIC.scala 122:20]
    node _T_46 = sub(regsPhase_0, shl(asSInt(UInt<20>("hc910")), 2)) @[CORDIC.scala 123:60]
    node _T_47 = tail(_T_46, 1) @[CORDIC.scala 123:60]
    node _T_48 = asSInt(_T_47) @[CORDIC.scala 123:60]
    node _T_49 = add(regsPhase_0, shl(asSInt(UInt<20>("hc910")), 2)) @[CORDIC.scala 123:99]
    node _T_50 = tail(_T_49, 1) @[CORDIC.scala 123:99]
    node _T_51 = asSInt(_T_50) @[CORDIC.scala 123:99]
    node _T_52 = mux(_T_29, _T_48, _T_51) @[CORDIC.scala 123:24]
    node _T_53 = mul(regsX_1, asSInt(UInt<21>("h2d414"))) @[CORDIC.scala 130:35]
    node _T_54 = mul(regsY_1, asSInt(UInt<21>("h2d414"))) @[CORDIC.scala 132:35]
    io_dataOutX <= asSInt(bits(shr(_T_53, 18), 20, 0)) @[CORDIC.scala 130:21]
    io_dataOutY <= asSInt(bits(shr(_T_54, 18), 20, 0)) @[CORDIC.scala 132:21]
    regsX_0 <= _GEN_3 @[CORDIC.scala 81:14 CORDIC.scala 85:14 CORDIC.scala 89:14]
    regsX_1 <= _T_38 @[CORDIC.scala 121:14]
    regsY_0 <= _GEN_4 @[CORDIC.scala 82:14 CORDIC.scala 86:14 CORDIC.scala 90:14]
    regsY_1 <= _T_45 @[CORDIC.scala 122:14]
    regsPhase_0 <= shl(_GEN_5, 1) @[CORDIC.scala 83:18 CORDIC.scala 87:18 CORDIC.scala 91:18]
    regsPhase_1 <= asSInt(bits(_T_52, 20, 0)) @[CORDIC.scala 123:18]
